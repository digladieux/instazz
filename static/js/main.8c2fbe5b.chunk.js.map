{"version":3,"sources":["component/validator/validators.ts","component/validator/validation.ts","component/validator/passwordValidation.ts","component/validator/emailValidation.ts","component/validator/equalValueValidation.ts","component/validator/lengthValidation.ts","component/globalFunctions.ts","component/alert.ts","component/cookies.ts","component/services/headers.ts","component/public-pages/callback.tsx","component/services/authentication/localAuthenticationService.ts","component/validator/letterValidation.ts","component/form/postGlobeTrotterForm.tsx","component/public-pages/register.tsx","component/form/recoveryPasswordForm.tsx","component/public-pages/recoveryPassword.tsx","component/validator/requiredValidation.ts","component/form/putPasswordForm.tsx","component/public-pages/changePassword.tsx","component/services/researchService.ts","component/form/researchForm.tsx","component/public-pages/home.tsx","component/services/authentication/linkedInAuthenticationService.ts","component/models/globeTrotterModel.ts","component/services/globeTrotterService.ts","component/private-pages/account.tsx","component/services/postService.ts","component/private-pages/trackersFeed.tsx","component/form/postPostForm.tsx","component/private-pages/postPost.tsx","component/public-pages/notFound.tsx","component/private-pages/singlePost.tsx","component/private-pages/singleGlobeTrotter.tsx","component/form/loginForm.tsx","component/public-pages/login.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/react-flags-select/flags sync /^/.//.*/.svg$"],"names":["REQUIRED","LENGTH","length","lengthValid","value","required","trim","Validation","errors","other_value","this","getErrors","PasswordValidator","push","lowercase_regex","RegExp","match","containLowercase","numeric_regex","containNumeric","uppercase_regex","containUppercase","special_regex","containSpecialCharacter","EmailValidation","email_regex","emailValid","EqualValueValidation","equal_value","equalValue","LengthValidation","displayArray","array","display","values","redirection","props","route","history","CloseLoader","Swal","close","ShowLoader","fire","title","html","allowOutsideClick","onBeforeOpen","showLoading","customClass","actions","ErrorAlert","text","icon","confirmButtonColor","getCookie","key","Cookies","get","removeCookie","remove","Context","headersWithoutAuthorization","headersWithAuthorization","LocalAuthenticationService","url_api","process","data","pictures","formData","FormData","append","name","country","description","shooting_date","hashtags","location","axios","post","headers","username","password","email","first_name","last_name","birth_date","biography","params","token","old_password","new_password","LetterValidation","onlyLetter","PostGlobeTrotterForm","_localService","Map","validations","myChangeHandler","event","nam","target","val","setState","second_value","index","state","set","isFormValid","check_password","handleSubmit","bind","onSelectCountry","document","getElementById","disabled","isValid","files","preventDefault","postGlobeTrotter","result","status","response","then","confirmButtonText","country_code","onSubmit","id","type","placeholder","onChange","style","width","searchable","defaultCountry","searchPlaceholder","onSelect","className","React","Component","Register","RecoveryPasswordForm","localService","emailValidation","resetPassword","RecoveryPassword","RequiredValidation","PutPasswordForm","putPassword","ChangePassword","ResearchService","research","ResearchForm","researchService","results","requireValidation","update","globe_trotter","trackers","forceUpdate","getResearch","listGlobeTrotter","map","SingleResearch","ResearchList","Home","LINKEDIN_ACCESS_TOKEN","LinkedInAuthenticationService","window","replace","Error","console","log","code","getProfileInformation","access_token","Callback","linkedinAuthenticationService","localAuthenticationService","url","search","queryString","parse","context","confirmedEmail","redirectionWithMessage","confirmationEmail","path","message","error","GlobeTrotterModel","_id","_username","_email","_first_name","_last_name","_birth_date","_biography","_trackers","_country_localisation","_posts","_statistic_followers","_statistic_followed","age","country_localisation","posts","statistic_followes","statistic_followed","GlobeTrotterService","id_globe_trotter","delete","Account","_globe_trotter_provider","getMe","PostService","page_number","page_size","toString","id_post","TrackersFeed","_post_service","incrementPageNumber","handleScroll","removeEventListener","addEventListener","getPosts","documentElement","scrollTop","innerHeight","scrollHeight","getPostsBySize","forEach","publication_date","listPost","displayPostTrackersFeed","PostList","onClick","PostPostForm","postService","validation","hashtag","handleKeyPress","postPost","onKeyDown","PostPost","picture","NotFound","SinglePost","getPostById","SingleGlobeTrotter","getGlobeTrotterById","LoginForm","undefined","authorization","loginByToken","loginByCredentials","withRouter","Login","GuardRoute","component","rest","render","a","async","isUserLogged","to","App","PrivateRoute","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.8c2fbe5b.chunk.js","sourcesContent":["export const REQUIRED: string = \"Field is required\";\nexport function LENGTH(length: number) { return \"Field must contains \" + length + \" characters\" };\nexport const EQUAL_VALUE: string = \"Fields are different\";\nexport const DIFFERENT_FIELDS: string = \"Fields are different\";\nexport const LOWER_CASE: string = 'Field must contain 1 lowercase alphabetical character';\nexport const UPPER_CASE: string = 'Field must contain 1 uppercase alphabetical character';\nexport const NUMERIC: string = 'Field must contain 1 numeric character';\nexport const SPECIAL_CHARACTER: string = 'Field must contain 1 special character like !@#$%^&';\nexport const ONLY_LETTER: string = 'Field must contain only letter';\nexport const EMAIL_INVALID: string = 'Email is invalid';\n\nexport function lengthValid(value: string, length: number): Boolean {\n    if (value.length < length) {\n        return false;\n    }\n    return true;\n}\n\nexport function required(value: string): Boolean {\n    if (value.trim() === \"\" || value.trim().length === 0) {\n        return false;\n    }\n    return true\n}\n\nexport function equalValue(value: string, equalValue: String): Boolean {\n    if (value !== equalValue) {\n        return false;\n    }\n    return true;\n}\nexport function containLowercase(value: string): Boolean {\n    var lowercase_regex = new RegExp(\"[a-z]\");\n    if (!value.match(lowercase_regex)) {\n        return false;\n    }\n    return true;\n}\n\nexport function containUppercase(value: string): Boolean {\n    var uppercase_regex = new RegExp(\"[a-z]\");\n    if (!value.match(uppercase_regex)) {\n        return false;\n    }\n    return true;\n}\n\nexport function containNumeric(value: string): Boolean {\n    var numeric_regex = new RegExp(\"[0-9]\");\n    if (!value.match(numeric_regex)) {\n        return false;\n    }\n    return true;\n}\n\nexport function containSpecialCharacter(value: string): Boolean {\n    var special_regex = new RegExp(\"[!@#$%^&*(),.?_:{}|<>]\");\n    if (!value.match(special_regex)) {\n        return false;\n    }\n    return true;\n}\n\nexport function emailValid(value: string): Boolean {\n    var email_regex = new RegExp('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$');\n    if (!value.match(email_regex)) {\n        return false;\n    }\n    return true;\n}\n\nexport function onlyLetter(value: string): Boolean {\n    var special_regex = new RegExp(\"^[a-zA-Z]+$\");\n    if (!value.match(special_regex)) {\n        return false;\n    }\n    return true;\n}\n\n\n// var strongRegex = new RegExp( \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\" );\n","abstract class Validation {\r\n\r\n    protected errors: string[] = []\r\n\r\n    abstract getErrors(value: string, other_value?: any): string[];\r\n\r\n    isValid(value: string, other_value?: any): Boolean {\r\n        return this.getErrors(value, other_value).length === 0;\r\n    }\r\n}\r\n\r\nexport default Validation","import { required, REQUIRED, lengthValid, LENGTH, containLowercase, LOWER_CASE, containNumeric, NUMERIC, containUppercase, UPPER_CASE, containSpecialCharacter, SPECIAL_CHARACTER } from \"./validators\";\r\nimport Validation from \"./validation\";\r\n\r\nclass PasswordValidator extends Validation {\r\n\r\n    getErrors(value: string, length: any): string[] {\r\n        this.errors = [];\r\n        if (!required(value)) {\r\n            this.errors.push(REQUIRED);\r\n        }\r\n        if (!lengthValid(value, length)) {\r\n            this.errors.push(LENGTH(length));\r\n        }\r\n        if (!containLowercase(value)) {\r\n            this.errors.push(LOWER_CASE);\r\n        }\r\n        if (!containNumeric(value)) {\r\n            this.errors.push(NUMERIC);\r\n        }\r\n        if (!containUppercase(value)) {\r\n            this.errors.push(UPPER_CASE);\r\n        }\r\n        if (!containSpecialCharacter(value)) {\r\n            this.errors.push(SPECIAL_CHARACTER);\r\n        }\r\n        return this.errors;\r\n\r\n    }\r\n}\r\n\r\nexport default PasswordValidator;","import { required, emailValid, REQUIRED, EMAIL_INVALID } from \"./validators\";\r\nimport Validation from \"./validation\";\r\n\r\nclass EmailValidation extends Validation {\r\n    getErrors(value: string): string[] {\r\n        this.errors = [];\r\n        if (!required(value)) {\r\n            this.errors.push(REQUIRED);\r\n        }\r\n        if (!emailValid(value)) {\r\n            this.errors.push(EMAIL_INVALID);\r\n        }\r\n        return this.errors;\r\n    }\r\n}\r\n\r\nexport default EmailValidation;","import Validation from \"./validation\";\r\nimport { equalValue, EQUAL_VALUE } from \"./validators\";\r\n\r\nclass EqualValueValidation extends Validation {\r\n    getErrors(value: string, equal_value: any): string[] {\r\n        this.errors = [];\r\n        if (!equalValue(value, equal_value)) {\r\n            this.errors.push(EQUAL_VALUE);\r\n        }\r\n        return this.errors;\r\n    }\r\n}\r\n\r\nexport default EqualValueValidation;","import Validation from \"./validation\";\r\nimport { required, lengthValid, REQUIRED, LENGTH } from \"./validators\";\r\n\r\nclass LengthValidation extends Validation {\r\n    getErrors(value: string, length: any): string[] {\r\n        this.errors = [];\r\n        if (!required(value)) {\r\n            this.errors.push(REQUIRED);\r\n        }\r\n        if (!lengthValid(value, length)) {\r\n            this.errors.push(LENGTH(length));\r\n        }\r\n        return this.errors;\r\n\r\n    }\r\n}\r\n\r\nexport default LengthValidation;","export function displayMap(map: Map<any, any> | undefined) {\r\n\r\n    let display: any;\r\n    if (map) {\r\n        for (let value of map.values()) {\r\n            display += value;\r\n        }\r\n    }\r\n    return display;\r\n\r\n}\r\n\r\nexport function displayArray(array: any[] | undefined) {\r\n    let display: any;\r\n    if (array) {\r\n        for (let value of array.values()) {\r\n            display += value;\r\n        }\r\n    }\r\n    return display;\r\n}\r\n\r\nexport function redirection(props: any, route: string) {\r\n    const test: any = props\r\n    const { history } = test\r\n    history.push(route);\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\n\r\nexport const SignInSocialNetwork: any = (html: any) => Swal.fire({\r\n    html: html,\r\n    width: 'auto',\r\n    focusConfirm: false,\r\n});\r\n\r\nexport const CopyToClipboardAlert: any = () => Swal.fire({\r\n    position: 'top-end',\r\n    icon: 'success',\r\n    title: 'Information copy past to clipboard',\r\n    showConfirmButton: false,\r\n    timer: 1000,\r\n    customClass: {\r\n        actions: 'centerClass'\r\n    }\r\n});\r\n\r\nexport const AlertGuestAccount: any = () => Swal.fire({\r\n    icon: 'info',\r\n    title: 'Thank you for your connection at OrcaWise Dashboard!',\r\n    html: 'You need to fulfill this form to know you better before using this dashboard',\r\n    customClass: {\r\n        actions: 'centerClass'\r\n    }\r\n});\r\n\r\nexport const CloseLoader: any = () => {\r\n    Swal.close();\r\n}\r\n\r\nexport const ShowLoader: any = () => {\r\n    Swal.fire({\r\n        title: 'Request to the server',\r\n        html: 'Finish soon ...',\r\n        allowOutsideClick: false,\r\n        onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n        },\r\n        customClass: {\r\n            actions: 'centerClass'\r\n        }\r\n    });\r\n}\r\n\r\nexport const ErrorAlert: any = (text: any) => {\r\n    return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Something went wrong!',\r\n        text: text,\r\n        confirmButtonColor: '#06cff1',\r\n        customClass: {\r\n            actions: 'centerClass'\r\n        }\r\n    });\r\n}\r\n\r\nexport const RequestSuccess: any = (title: string) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        icon: 'success',\r\n        confirmButtonColor: '#06cff1',\r\n        confirmButtonText: 'Ok',\r\n        customClass: {\r\n            actions: 'centerClass'\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const WarningAlert: any = (title: string, text: string) => {\r\n    Swal.fire({\r\n        title: title,\r\n        text: text,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#06cff1',\r\n        cancelButtonColor: '#FF0000',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonText: 'Delete',\r\n        customClass: {\r\n            actions: 'centerClass'\r\n        }\r\n    });\r\n}\r\n","import Cookies from 'universal-cookie';\r\n\r\nexport function setCookie(key: string, value: string): void {\r\n    const cookies = new Cookies();\r\n    cookies.set(key, value, { path: '/' });\r\n}\r\n\r\nexport function getCookie(key: string): string {\r\n    const cookies = new Cookies();\r\n    return cookies.get(key);\r\n}\r\n\r\nexport function removeCookie(key: string): void {\r\n    const cookies = new Cookies();\r\n    cookies.remove(key);\r\n}","import { getCookie } from \"../cookies\";\r\n\r\nexport var headersWithoutAuthorization = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json'\r\n}\r\n\r\nexport var headersWithAuthorization = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': getCookie('authorization')\r\n}","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport LinkedInAuthenticationService from \"../services/authentication/linkedInAuthenticationService\";\r\nimport LocalAuthenticationService from '../services/authentication/localAuthenticationService';\r\n\r\nenum Context {\r\n    linkedin = \"linkedin\",\r\n    confirmedEmail = \"confirmedEmail\"\r\n}\r\n\r\n\r\n\r\nclass Callback extends React.Component {\r\n\r\n    private linkedinAuthenticationService: LinkedInAuthenticationService = new LinkedInAuthenticationService();\r\n    private localAuthenticationService: LocalAuthenticationService = new LocalAuthenticationService();\r\n    constructor(props: any) {\r\n        super(props);\r\n        const url: string = props.location?.search;\r\n        const params: any = queryString.parse(url);\r\n        if (!params.context) {\r\n            this.redirectionWithMessage(\"/\", \"CONTEXT Parameter missing\")\r\n        }\r\n\r\n        else {\r\n\r\n            switch (params.context) {\r\n                case Context.confirmedEmail:\r\n                    if (!params.token) {\r\n                        this.redirectionWithMessage(\"/\", \"CONTEXT Parameter missing\")\r\n                    }\r\n                    this.localAuthenticationService.confirmationEmail(params.token)\r\n                    break;\r\n                default:\r\n                    this.redirectionWithMessage(\"/\", \"CONTEXT Parameter invalid\")\r\n            }\r\n        }\r\n    }\r\n\r\n    private redirectionWithMessage(path: string, message: string) {\r\n        window.location.replace(path);\r\n        console.error(message);\r\n    }\r\n\r\n    // getTokenFromLinkedIn(params: any) {\r\n    //     this.linkedinAuthenticationService.getTokenFromLinkedIn(params);\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Callback;","import axios from 'axios';\r\nimport { headersWithoutAuthorization, headersWithAuthorization } from '../headers';\r\n\r\nclass LocalAuthenticationService {\r\n\r\n    private url_api: string;\r\n\r\n    constructor() {\r\n        if (process.env.REACT_APP_API_URI) {\r\n            this.url_api = process.env.REACT_APP_API_URI + \"authentication/\";\r\n        } else {\r\n            throw new ReferenceError(\"REACT_APP_API_URI not find\");\r\n        }\r\n    }\r\n\r\n    async postPost(data: any, pictures: FileList | null) {\r\n        if (pictures !== null && pictures.length > 0) {\r\n            const formData = new FormData();\r\n            formData.append(\"picture\", pictures[0], pictures[0]?.name);\r\n            formData.append(\"title\", data.title)\r\n            formData.append(\"country\", data.country)\r\n            formData.append(\"description\", data.description)\r\n            formData.append(\"country\", data.country)\r\n            formData.append(\"shooting_date\", data.shooting_date)\r\n            formData.append(\"hashtags\", data.hashtags)\r\n            formData.append(\"location\", data.location)\r\n            try {\r\n                return await axios.post(this.url_api, formData, {\r\n                    headers: headersWithAuthorization\r\n                })\r\n            } catch (error) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    async postGlobeTrotter(pictures: FileList | null, data: any) {\r\n        if (pictures !== null && pictures.length > 0) {\r\n            const formData = new FormData();\r\n            formData.append(\"picture\", pictures[0], pictures[0]?.name);\r\n            formData.append(\"username\", data.username);\r\n            formData.append(\"password\", data.password);\r\n            formData.append(\"email\", data.email);\r\n            formData.append(\"first_name\", data.first_name);\r\n            formData.append(\"last_name\", data.last_name);\r\n            formData.append(\"birth_date\", data.birth_date);\r\n            formData.append(\"biography\", data.biography);\r\n            formData.append(\"country\", data.country);\r\n            try {\r\n                return await axios.post(this.url_api + \"globeTrotter\", formData);\r\n            } catch (error) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n\r\n    async loginByCredentials(username: string, password: string) {\r\n        try {\r\n            return await axios.get(this.url_api + \"/loginByCredentials\", {\r\n                headers: headersWithoutAuthorization,\r\n                params: {\r\n                    username: username,\r\n                    password: password\r\n                }\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async loginByToken(token: string) {\r\n        try {\r\n            return await axios.get(this.url_api + \"/loginByToken\", {\r\n                headers: headersWithoutAuthorization,\r\n                params: {\r\n                    token: token,\r\n                }\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async resetPassword(email: string) {\r\n        try {\r\n            return await axios.get(this.url_api + \"/resetPassword\", {\r\n                headers: headersWithAuthorization,\r\n                params: {\r\n                    email: email,\r\n                }\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async putPassword(old_password: string, new_password: string) {\r\n        try {\r\n            return await axios.get(this.url_api + \"/putPassword\", {\r\n                headers: headersWithAuthorization,\r\n                params: {\r\n                    old_password: old_password,\r\n                    new_password: new_password,\r\n                }\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async confirmationEmail(token: string) {\r\n        try {\r\n            return await axios.post(this.url_api,\r\n                {\r\n                    token: token,\r\n                }, {\r\n                headers: headersWithoutAuthorization,\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\nexport default LocalAuthenticationService;","import { required, REQUIRED, onlyLetter, ONLY_LETTER } from \"./validators\";\r\nimport Validation from \"./validation\";\r\n\r\nclass LetterValidation extends Validation {\r\n\r\n    getErrors(value: string): string[] {\r\n        this.errors = [];\r\n        if (!required(value)) {\r\n            this.errors.push(REQUIRED);\r\n        }\r\n        if (!onlyLetter(value)) {\r\n            this.errors.push(ONLY_LETTER);\r\n        }\r\n        return this.errors;\r\n    }\r\n}\r\n\r\nexport default LetterValidation;","import React from 'react';\nimport PasswordValidator from '../validator/passwordValidation';\nimport EmailValidation from '../validator/emailValidation';\nimport EqualValueValidation from '../validator/equalValueValidation';\nimport LengthValidation from '../validator/lengthValidation';\nimport { displayArray, redirection } from '../globalFunctions';\nimport { ShowLoader, ErrorAlert, CloseLoader, RequestSuccess } from '../alert';\nimport LocalAuthenticationService from '../services/authentication/localAuthenticationService';\nimport ReactFlagsSelect from 'react-flags-select';\nimport \"../../assets/styles/selectFlag.css\";\nimport Validation from '../validator/validation';\nimport LetterValidation from '../validator/letterValidation';\ntype State = {\n    username: string,\n    password: string,\n    check_password: string,\n    email: string,\n    first_name: string,\n    last_name: string,\n    birth_date: string,\n    biography: string,\n    country: string\n};\nclass PostGlobeTrotterForm extends React.Component<{}, State> {\n\n    private _localService: LocalAuthenticationService = new LocalAuthenticationService();;\n    private errors: Map<string, string[]> = new Map();\n    private validations: Validation[] = [new PasswordValidator(), new EqualValueValidation(), new LengthValidation(), new EmailValidation(), new LetterValidation()]\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            check_password: '',\n            email: '',\n            first_name: '',\n            last_name: '',\n            birth_date: '',\n            biography: '',\n            country: 'FR',\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onSelectCountry = this.onSelectCountry.bind(this);\n\n    }\n\n    myChangeHandler = (event: any) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val } as Pick<State, keyof State>);\n        let index: number = -1;\n        let second_value: any;\n        switch (nam) {\n            case \"password\":\n                index = 0;\n                break;\n            case \"check_password\":\n                index = 1;\n                second_value = this.state.password;\n                break;\n            case \"username\":\n                index = 2;\n                second_value = 6;\n                break;\n            case \"email\":\n                index = 3;\n                break;\n            case \"first_name\":\n            case \"last_name\":\n                index = 4;\n                break;\n        }\n        this.errors.set(nam, this.validations[index].getErrors(val, second_value));\n        this.isFormValid();\n\n\n    }\n\n    isFormValid() {\n\n        (document.getElementById(\"submit\") as HTMLButtonElement).disabled =\n            !this.validations[0].isValid(this.state.password) ||\n            !this.validations[1].isValid(this.state.password, this.state.check_password) ||\n            !this.validations[2].isValid(this.state.username, 6) ||\n            !this.validations[3].isValid(this.state.email) ||\n            !this.validations[4].isValid(this.state.first_name) ||\n            (document.getElementById(\"picture\") as HTMLInputElement).files?.length === 0 ||\n            !this.validations[4].isValid(this.state.last_name);\n\n    }\n\n    async handleSubmit(event: any) {\n        event.preventDefault();\n        ShowLoader();\n        const val = (document.getElementById(\"picture\") as HTMLInputElement)\n        const result = await this._localService.postGlobeTrotter(val?.files, this.state);\n        if (result.status !== 201) {\n            ErrorAlert(result.response.data).then();\n        } else {\n            CloseLoader();\n            RequestSuccess(\"Account created\").then();\n            redirection(this.props, '/login');\n        }\n    }\n\n    onSelectCountry(country_code: string) {\n        this.setState({ country: country_code } as Pick<State, keyof State>);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n\n                <label>Enter your username\n                    <input\n                        id='username'\n                        type='text'\n                        name='username'\n                        placeholder='Enter your username'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('username'))}\n                </label><br></br>\n                <label>Enter your password:\n                    <input\n                        id='password'\n                        type='password'\n                        name='password'\n                        placeholder='Enter your password'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('password'))}\n                </label><br></br>\n                <label>Enter your password again:\n                    <input\n                        id='check_password'\n                        type='password'\n                        name='check_password'\n                        placeholder='Enter again your password'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('check_password'))}\n                </label><br></br>\n                <label>Enter your email:\n                    <input\n                        id='email'\n                        type='email'\n                        name='email'\n                        placeholder='Enter your email'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('email'))}\n                </label><br></br>\n                <label>Enter your first name:\n                    <input\n                        id='first_name'\n                        type='text'\n                        name='first_name'\n                        placeholder='Enter your first_name'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('first_name'))}\n                </label><br></br>\n                <label>Enter your last name:\n                    <input\n                        id='last_name'\n                        type='text'\n                        name='last_name'\n                        placeholder='Enter your last_name'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('last_name'))}\n                </label><br></br>\n                <label>Enter your age:\n                    <input\n                        id='birth_date'\n                        type='date'\n                        name='birth_date'\n                        onChange={this.myChangeHandler} />\n                </label><br></br>\n                <label>Enter your biography:\n                    <input\n                        type='text'\n                        name='biography'\n                        placeholder='Enter your biography'\n                        onChange={this.myChangeHandler} />\n                </label><br></br>\n                <div style={{ width: 25 + '%' }}>\n                    <ReactFlagsSelect\n                        searchable={true}\n                        defaultCountry=\"FR\"\n                        searchPlaceholder=\"Search for a country\"\n                        onSelect={this.onSelectCountry}\n                        placeholder=\"Select your actual country\"\n                        className=\"flag-select\" />\n                </div>\n                <input type=\"file\" id=\"picture\" name=\"picture\" onChange={this.myChangeHandler} />\n                <input id=\"submit\"\n                    type=\"submit\" value=\"Submit\" disabled />\n            </form>\n        );\n    }\n}\nexport default PostGlobeTrotterForm;","import CreateUserForm from '../form/postGlobeTrotterForm'\nimport React from 'react'\n\nclass Register extends React.Component {\n\n    render() {\n\n        return (\n            <div>\n                <CreateUserForm  {...this.props} />\n            </div>\n\n        );\n    }\n}\n\nexport default Register","import React from 'react';\nimport EmailValidation from '../validator/emailValidation';\nimport { ShowLoader, ErrorAlert, CloseLoader } from '../alert';\nimport LocalAuthenticationService from '../services/authentication/localAuthenticationService';\nimport { redirection, displayArray } from '../globalFunctions';\nimport Validation from '../validator/validation';\ntype State = {\n    email: string,\n};\nclass RecoveryPasswordForm extends React.Component<{}, State> {\n\n    private localService: LocalAuthenticationService = new LocalAuthenticationService()\n    private errors: string[] = []\n    private emailValidation: Validation = new EmailValidation();\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            email: '',\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    myChangeHandler = (event: any) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.errors = [];\n        this.setState({ [nam]: val } as Pick<State, keyof State>);\n        this.errors = this.emailValidation.getErrors(val);\n        if (this.errors.length !== 0) {\n            (document.getElementById(\"submit\") as HTMLButtonElement).disabled = true;\n        } else {\n            (document.getElementById(\"submit\") as HTMLButtonElement).disabled = false;\n        }\n    }\n\n    async handleSubmit(event: any) {\n        event.preventDefault();\n        ShowLoader();\n        const result = await this.localService.resetPassword(this.state.email);\n        if (result.status !== 200) {\n            ErrorAlert(result.response.data).then();\n        } else {\n            CloseLoader();\n            redirection(this.props, '/login');\n\n\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Enter your email:\n                    <input\n                        id='email'\n                        type='email'\n                        name='email'\n                        placeholder='Enter your email'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors)}\n                </label><br></br>\n                <input id=\"submit\"\n                    type=\"submit\" value=\"Submit\" disabled />\n            </form>\n        );\n    }\n}\nexport default RecoveryPasswordForm;","import RecoveryPasswordForm from '../form/recoveryPasswordForm'\nimport React from 'react'\nconst RecoveryPassword = () => {\n    return (\n        <div>\n            <RecoveryPasswordForm />\n\n        </div>\n    );\n}\n\nexport default RecoveryPassword;","import Validation from \"./validation\";\r\nimport { required, REQUIRED } from \"./validators\";\r\n\r\nclass RequiredValidation extends Validation {\r\n\r\n    getErrors(value: string): string[] {\r\n        this.errors = [];\r\n        if (!required(value)) {\r\n            this.errors.push(REQUIRED);\r\n        }\r\n        return this.errors;\r\n    }\r\n}\r\n\r\nexport default RequiredValidation;","import React from 'react';\nimport PasswordValidator from '../validator/passwordValidation';\nimport EqualValueValidation from '../validator/equalValueValidation';\nimport RequiredValidation from '../validator/requiredValidation';\nimport LocalAuthenticationService from '../services/authentication/localAuthenticationService';\nimport { ShowLoader, ErrorAlert, CloseLoader } from '../alert';\nimport { displayArray, redirection } from '../globalFunctions';\nimport Validation from '../validator/validation';\ntype State = {\n    old_password: string,\n    new_password: string,\n    check_password: string,\n};\nclass PutPasswordForm extends React.Component<{}, State> {\n\n    private errors: Map<string, string[]> = new Map();\n    private localService: LocalAuthenticationService = new LocalAuthenticationService();\n    private validations: Validation[] = [new RequiredValidation(), new EqualValueValidation(), new PasswordValidator()];\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            old_password: '',\n            new_password: '',\n            check_password: '',\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    myChangeHandler = (event: any) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val } as Pick<State, keyof State>);\n        let index: number;\n        switch (nam) {\n            case \"old_password\":\n                index = 0;\n                break;\n            case \"check_password\":\n                index = 1\n                break;\n            case \"new_password\":\n                index = 2\n                break;\n            default:\n                index = -1\n        }\n\n        this.errors.set(nam, this.validations[index].getErrors(val, 8));\n        this.isFormValid();\n    }\n\n    isFormValid() {\n\n        if (\n            this.validations[0].isValid(this.state.old_password) &&\n            this.validations[1].isValid(this.state.new_password) &&\n            this.validations[2].isValid(this.state.new_password, this.state.check_password)\n        ) {\n            (document.getElementById(\"submit\") as HTMLButtonElement).disabled = false;\n\n        } else {\n            (document.getElementById(\"submit\") as HTMLButtonElement).disabled = true;\n        }\n\n    }\n\n    async handleSubmit(event: any) {\n        event.preventDefault();\n        ShowLoader();\n        const result = await this.localService.putPassword(this.state.old_password, this.state.new_password);\n        if (result.status !== 200) {\n            ErrorAlert(result.response.data).then();\n        } else {\n            CloseLoader();\n            redirection(this.props, '/login');\n\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Enter your old_password:\n                    <input\n                        id='old_password'\n                        type='password'\n                        name='old_password'\n                        placeholder='Enter your old_password'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('old_password'))}\n                </label><br></br>\n                <label>Enter your new_password:\n                    <input\n                        id='new_password'\n                        type='password'\n                        name='new_password'\n                        placeholder='Enter your new_password'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('new_password'))}\n                </label><br></br>\n                <label>Enter your password again:\n                    <input\n                        id='check_password'\n                        type='password'\n                        name='check_password'\n                        placeholder='Enter again your password'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('check_password'))}\n                </label><br></br>\n                <input id=\"submit\"\n                    type=\"submit\" value=\"Submit\" disabled />\n            </form>\n        );\n    }\n}\nexport default PutPasswordForm;","import PutPasswordForm from '../form/putPasswordForm'\nimport React from 'react'\nconst ChangePassword = () => {\n    return (\n        <div>\n            <PutPasswordForm />\n\n        </div>\n    );\n}\n\nexport default ChangePassword;","import axios from 'axios';\r\nimport { headersWithAuthorization } from './headers';\r\n\r\nclass ResearchService {\r\n\r\n    private url_api: string;\r\n\r\n    constructor() {\r\n        if (process.env.REACT_APP_API_URI) {\r\n            this.url_api = process.env.REACT_APP_API_URI + \"research\";\r\n        } else {\r\n            throw new ReferenceError(\"REACT_APP_API_URI not find\");\r\n        }\r\n    }\r\n\r\n    async getResearch(research: string) {\r\n        try {\r\n            return await axios.get(this.url_api, {\r\n                params: {\r\n                    research: research,\r\n                }, headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n}\r\nexport default ResearchService;","import React from 'react';\r\nimport ResearchService from '../services/researchService';\r\nimport RequiredValidation from '../validator/requiredValidation';\r\nimport GlobeTrotterModel from '../models/globeTrotterModel';\r\nimport Validation from '../validator/validation';\r\ntype State = {\r\n    research: string,\r\n};\r\nclass ResearchForm extends React.Component<{}, State> {\r\n\r\n    private researchService: ResearchService = new ResearchService();\r\n    private results: { globe_trotter: GlobeTrotterModel[], trackers: string[] };\r\n    private requireValidation: Validation = new RequiredValidation();\r\n    private update: boolean = false;\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            research: '',\r\n        };\r\n        this.results = { globe_trotter: [], trackers: [] };\r\n    }\r\n\r\n    myChangeHandler = (event: any) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val } as Pick<State, keyof State>);\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.update) {\r\n            this.update = false;\r\n        } else if (!this.requireValidation.isValid(this.state.research)) {\r\n            this.results = { globe_trotter: [], trackers: [] };\r\n            this.update = true;\r\n            this.forceUpdate()\r\n\r\n        } else {\r\n            const result = await this.researchService.getResearch(this.state.research);\r\n            if (result.status === 200) {\r\n                this.results = result.data\r\n                this.update = true;\r\n                this.forceUpdate()\r\n\r\n            } else {\r\n                this.results = { globe_trotter: [], trackers: [] };\r\n            }\r\n        }\r\n    }\r\n\r\n    SingleResearch(value: GlobeTrotterModel) {\r\n        return <div>\r\n            <li>Full Name : {value.first_name + \" \" + value.last_name}</li>\r\n        </div>;\r\n    }\r\n\r\n    ResearchList() {\r\n        const listGlobeTrotter = this.results?.globe_trotter?.map((result: GlobeTrotterModel) =>\r\n            this.SingleResearch(result));\r\n        // const listTrackers = this.results?.trackers.map((result) =>\r\n        // this.SingleResearch(result));\r\n        return (\r\n            <ul>\r\n                {listGlobeTrotter}\r\n                {/* {listTrackers} */}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label>Enter your research:\r\n                    <input\r\n                        id='research'\r\n                        type='text'\r\n                        name='research'\r\n                        placeholder='Enter your research'\r\n                        value={this.state.research}\r\n                        onChange={this.myChangeHandler} />\r\n                    {this.ResearchList()}\r\n                </label><br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ResearchForm;","import React from 'react'\nimport ResearchForm from '../form/researchForm'\n// import MetaTags from 'react-meta-tags';\nconst Home = () => {\n    return (\n        <div>\n            {/* <MetaTags>\n                <title>TrackTrip</title>\n            </MetaTags> */}\n            Page d'accueil\n            <ResearchForm />\n        </div>\n    );\n}\n\nexport default Home;","import axios from 'axios';\r\nconst LINKEDIN_SCOPE: string = 'r_liteprofile r_emailaddress';\r\nconst LINKEDIN_REDIRECT: string = 'http://127.0.0.1:3000/callback?origin=linkedin';\r\nconst LINKEDIN_CLIENT_ID: string = '86wk11jt27rgpb';\r\nconst LINKEDIN_STATE: string = 'random_string';\r\nconst LINKEDIN_CLIENT_SECRET: string = 'uFJm3EXqFDp0jur2';\r\nconst LINKEDIN_ACCESS_TOKEN: string = 'https://www.linkedin.com/oauth/v2/accessToken?grant_type=authorization_code&client_id='\r\n    + LINKEDIN_CLIENT_ID + '&client_secret='\r\n    + LINKEDIN_CLIENT_SECRET + '&redirect_uri='\r\n    + LINKEDIN_REDIRECT + '&code=';\r\n\r\n// const LINKEDIN_EMAIL_URL: String =\r\n// 'https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))';\r\nconst LINKEDIN_PROFILE_URL: string = 'https://api.linkedin.com/v2/me';\r\nconst LINKEDIN_AUTHORIZATION_CODE = 'https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=' + LINKEDIN_CLIENT_ID\r\n    + '&redirect_uri=' + LINKEDIN_REDIRECT + '&state=' + LINKEDIN_STATE + '&scope=' + LINKEDIN_SCOPE;\r\n\r\n\r\nclass LinkedInAuthenticationService {\r\n\r\n    signInWithLinkedIn() {\r\n        window.location.replace(LINKEDIN_AUTHORIZATION_CODE);\r\n    }\r\n\r\n    getTokenFromLinkedIn(params: any) {\r\n        if (LINKEDIN_STATE !== params.state) {\r\n            throw new Error(\"Linkedin Authentication Error\");\r\n        }\r\n        console.log(LINKEDIN_ACCESS_TOKEN + params.code);\r\n        axios.get(LINKEDIN_ACCESS_TOKEN + params.code).then((data: any) => {\r\n            console.log(data);\r\n            this.getProfileInformation(data.access_token);\r\n        });\r\n        // .catch((error) => console.log(error));\r\n    }\r\n\r\n    getProfileInformation(access_token: string) {\r\n        axios.get(LINKEDIN_PROFILE_URL, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + access_token\r\n            }\r\n        }).then((data: any) => {\r\n            console.log(data);\r\n        });\r\n    }\r\n}\r\n\r\nexport default LinkedInAuthenticationService;","import PostModel from \"./postModel\";\r\nimport Statistic from \"./statisticModel\";\r\n\r\nclass GlobeTrotterModel {\r\n    private _id: string;\r\n    private _username: string;\r\n    private _email: string;\r\n    private _first_name: string;\r\n    private _last_name: string;\r\n    private _birth_date: string;\r\n    private _biography: string;\r\n    private _trackers: Array<string>;\r\n    private _country_localisation: string;\r\n    private _posts: Array<PostModel>;\r\n    private _statistic_followers: Statistic;\r\n    private _statistic_followed: Statistic;\r\n\r\n    constructor(data: any) {\r\n        this._id = data?.id;\r\n        this._username = data?.username;\r\n        this._email = data?.email;\r\n        this._first_name = data?.first_name;\r\n        this._last_name = data?.last_name;\r\n        this._birth_date = data?.age;\r\n        this._biography = data?.biography;\r\n        this._trackers = data?.trackers;\r\n        this._country_localisation = data?.country_localisation;\r\n        this._posts = data?.posts;\r\n        this._statistic_followers = data?.statistic_followes;\r\n        this._statistic_followed = data?.statistic_followed;\r\n    }\r\n\r\n    id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    username(): string {\r\n        return this._username;\r\n    }\r\n\r\n    email(): string {\r\n        return this._email;\r\n    }\r\n\r\n    first_name(): string {\r\n        return this._first_name;\r\n    }\r\n\r\n    last_name(): string {\r\n        return this._last_name;\r\n    }\r\n\r\n    birth_date(): string {\r\n        return this._birth_date;\r\n    }\r\n\r\n    biography(): string {\r\n        return this._biography;\r\n    }\r\n\r\n\r\n    trackers(): Array<string> {\r\n        return this._trackers;\r\n    }\r\n\r\n    country_localisation(): string {\r\n        return this._country_localisation;\r\n    }\r\n\r\n    posts(): Array<PostModel> {\r\n        return this._posts;\r\n    }\r\n\r\n    statistic_followes(): Statistic {\r\n        return this._statistic_followers;\r\n    }\r\n\r\n    statistic_followed(): Statistic {\r\n        return this._statistic_followed;\r\n    }\r\n}\r\n\r\nexport default GlobeTrotterModel","import axios from 'axios';\r\nimport { headersWithAuthorization } from './headers';\r\nclass GlobeTrotterService {\r\n\r\n    private url_api: string;\r\n\r\n    constructor() {\r\n        if (process.env.REACT_APP_API_URI) {\r\n            this.url_api = process.env.REACT_APP_API_URI + \"globeTrotter\";\r\n        } else {\r\n            throw new ReferenceError(\"REACT_APP_API_URI not find\");\r\n        }\r\n    }\r\n\r\n    async getGlobeTrotterById(id: string) {\r\n        try {\r\n            return await axios.get(this.url_api + '/:id', {\r\n                headers: headersWithAuthorization,\r\n                params: {\r\n                    id: id\r\n                }\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async getMe() {\r\n        try {\r\n            return await axios.get(this.url_api + '/me', {\r\n                headers: headersWithAuthorization,\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async postLike(data: any) {\r\n        try {\r\n            return await axios.post(this.url_api + \"/postLike\", {\r\n                id_globe_trotter: data.id_globe_trotter,\r\n            }, {\r\n                headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n\r\n    async deleteGlobeTrotter() {\r\n        try {\r\n            await axios.delete(this.url_api, {\r\n                params: {\r\n                    id: 'id'\r\n                }, headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\nexport default GlobeTrotterService;","import React from 'react';\r\nimport GlobeTrotterModel from '../models/globeTrotterModel';\r\nimport GlobeTrotterService from '../services/globeTrotterService';\r\nimport { ShowLoader, ErrorAlert, CloseLoader } from '../alert';\r\nimport { redirection } from '../globalFunctions';\r\ntype State = { globe_trotter: GlobeTrotterModel };\r\ntype Props = { id: string }\r\nclass Account extends React.Component<Props, State>  {\r\n\r\n    private _globe_trotter_provider: GlobeTrotterService = new GlobeTrotterService();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            globe_trotter: new GlobeTrotterModel(null),\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n\r\n        ShowLoader();\r\n        const result = await this._globe_trotter_provider.getMe();\r\n        if (result.status === 200) {\r\n            this.setState({ globe_trotter: result.data } as Pick<State, keyof State>);\r\n            CloseLoader();\r\n        } else {\r\n            ErrorAlert(result.response.data).then();\r\n            redirection(this.props, '/login');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                FORM POUR MODIFIER VALUE\r\n                username: {this.state.globe_trotter?.username}<br></br>\r\n                biography: {this.state.globe_trotter?.biography}<br></br>\r\n                last_name: {this.state.globe_trotter?.last_name}<br></br>\r\n                first_name: {this.state.globe_trotter?.first_name}<br></br>\r\n                age : {this.state.globe_trotter?.birth_date}<br></br>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Account;","import axios from 'axios';\r\nimport { headersWithAuthorization } from './headers';\r\n\r\nclass PostService {\r\n\r\n    private url_api: string;\r\n\r\n    constructor() {\r\n        if (process.env.REACT_APP_API_URI) {\r\n            this.url_api = process.env.REACT_APP_API_URI + \"post\";\r\n        } else {\r\n            throw new ReferenceError(\"REACT_APP_API_URI not find\");\r\n        }\r\n    }\r\n\r\n    async getPostById(id: string) {\r\n        try {\r\n            return await axios.get(this.url_api, {\r\n                params: {\r\n                    id: id,\r\n                }, headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async getPostsBySize(page_number: number, page_size: number) {\r\n        try {\r\n            return await axios.get(this.url_api + \"/history\", {\r\n                params: {\r\n                    page_number: page_number.toString(),\r\n                    page_size: page_size.toString()\r\n                },\r\n                headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async postPost(data: any, pictures: FileList | null) {\r\n        if (pictures !== null && pictures.length > 0) {\r\n            const formData = new FormData();\r\n            formData.append(\"picture\", pictures[0], pictures[0]?.name);\r\n            formData.append(\"title\", data.title)\r\n            formData.append(\"country\", data.country)\r\n            formData.append(\"description\", data.description)\r\n            formData.append(\"country\", data.country)\r\n            formData.append(\"shooting_date\", data.shooting_date)\r\n            formData.append(\"hashtags\", data.hashtags)\r\n            formData.append(\"location\", data.location)\r\n            try {\r\n                return await axios.post(this.url_api, formData, {\r\n                    headers: headersWithAuthorization\r\n                })\r\n            } catch (error) {\r\n                return error;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async postLike(data: any) {\r\n        try {\r\n            return await axios.post(this.url_api + \"/postLike\", {\r\n                id_post: data.id_post,\r\n            }, {\r\n                headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async deletePost(id_post: string) {\r\n        try {\r\n            await axios.delete(this.url_api, {\r\n                params: {\r\n                    id: id_post\r\n                }, headers: headersWithAuthorization\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default PostService;","import React from 'react';\r\nimport PostModel from '../models/postModel';\r\nimport PostService from '../services/postService';\r\nimport { ShowLoader, CloseLoader } from '../alert';\r\ntype state = {\r\n    page_number: number,\r\n    page_size: number,\r\n    posts: PostModel[]\r\n};\r\nclass TrackersFeed extends React.Component<{}, state>  {\r\n\r\n    private _post_service: PostService = new PostService();\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            page_number: 0,\r\n            page_size: 5,\r\n            posts: []\r\n        }\r\n        this.incrementPageNumber = this.incrementPageNumber.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n\r\n\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n        await this.getPosts();\r\n    }\r\n\r\n\r\n    async handleScroll() {\r\n        if (document.documentElement.scrollTop + window.innerHeight === document.documentElement.scrollHeight) {\r\n            this.incrementPageNumber();\r\n        }\r\n    }\r\n\r\n    async getPosts() {\r\n        ShowLoader();\r\n        const result = await this._post_service.getPostsBySize(this.state.page_number, this.state.page_size);\r\n        if (result.status === 200) {\r\n            const posts = this.state.posts;\r\n            result.data.forEach(post => {\r\n                posts.push(post);\r\n            });\r\n            this.setState({ posts: posts });\r\n\r\n        }\r\n        CloseLoader();\r\n    }\r\n\r\n\r\n    displayPostTrackersFeed(post: PostModel) {\r\n        return <div>\r\n            <li>Title : {post.title}</li>\r\n            <li>Country : {post.country}</li>\r\n            <li>Id : {post.id}</li>\r\n            <li>Date de Publication : {post.publication_date}</li><br />\r\n        </div>;\r\n    }\r\n\r\n    PostList() {\r\n        const listPost = this.state.posts.map((post) =>\r\n            this.displayPostTrackersFeed(post));\r\n        return (\r\n            <ul>\r\n                {listPost}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    incrementPageNumber() {\r\n        this.setState({ page_number: this.state.page_number + 1 });\r\n        this.getPosts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.PostList()}\r\n                <button type=\"button\" onClick={this.incrementPageNumber}>See More post</button>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TrackersFeed;","import ReactFlagsSelect from 'react-flags-select';\r\nimport React from 'react';\r\nimport PostService from '../services/postService';\r\nimport { ShowLoader, ErrorAlert, CloseLoader } from '../alert';\r\nimport { redirection, displayArray } from '../globalFunctions';\r\nimport RequiredValidation from '../validator/requiredValidation';\r\nimport \"../../assets/styles/selectFlag.css\";\r\nimport Validation from '../validator/validation';\r\ntype State = {\r\n    title: string,\r\n    description: string,\r\n    shooting_date: string,\r\n    country: string,\r\n    location: string,\r\n    hashtag: string,\r\n    hashtags: string[]\r\n};\r\nclass PostPostForm extends React.Component<{}, State> {\r\n\r\n    private postService: PostService = new PostService();\r\n    private errors: Map<string, string[]> = new Map();\r\n    private validation: Validation = new RequiredValidation();\r\n    constructor(props: any) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            shooting_date: '',\r\n            country: 'FR',\r\n            location: '',\r\n            hashtag: '',\r\n            hashtags: []\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.onSelectCountry = this.onSelectCountry.bind(this);\r\n    }\r\n\r\n    myChangeHandler = (event: any) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [nam]: val } as Pick<State, keyof State>);\r\n        switch (nam) {\r\n            case \"title\":\r\n            case \"country\":\r\n                this.errors.set(nam, this.validation.getErrors(val));\r\n                this.isFormValid();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isFormValid() {\r\n        (document.getElementById(\"submit\") as HTMLButtonElement).disabled =\r\n            !this.validation.isValid(this.state.title) ||\r\n            !this.validation.isValid(this.state.country) ||\r\n            (document.getElementById(\"picture\") as HTMLInputElement).files?.length === 0;\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        window.removeEventListener('keypress', this.handleKeyPress);\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.addEventListener('keypress', this.handleKeyPress)\r\n    }\r\n\r\n    handleKeyPress(event: any) {\r\n\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            const hashtags = this.state.hashtags;\r\n            hashtags.push(this.state.hashtag)\r\n            this.setState({\r\n                hashtags: hashtags,\r\n                hashtag: ''\r\n            } as Pick<State, keyof State>);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        ShowLoader();\r\n        const val = (document.getElementById(\"picture\") as HTMLInputElement)\r\n        const result = await this.postService.postPost(this.state, val?.files);\r\n        if (result.status !== 201) {\r\n            ErrorAlert(result?.response?.data).then();\r\n        } else {\r\n            CloseLoader();\r\n            redirection(this.props, '/trackersFeed');\r\n\r\n        }\r\n    }\r\n\r\n    onSelectCountry(country_code: string) {\r\n        this.setState({ country: country_code } as Pick<State, keyof State>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Enter your title\r\n                    <input\r\n                        id='title'\r\n                        type='text'\r\n                        name='title'\r\n                        placeholder='Enter your title'\r\n                        onChange={this.myChangeHandler} />\r\n                    {displayArray(this.errors.get('title'))}\r\n                </label><br></br>\r\n                <label>Enter your description\r\n                    <input\r\n                        id='description'\r\n                        type='text'\r\n                        name='description'\r\n                        placeholder='Enter your description'\r\n                        onChange={this.myChangeHandler} />\r\n                    {displayArray(this.errors.get('description'))}\r\n                </label><br></br>\r\n                <label>Enter the shooting date:\r\n                    <input\r\n                        id='shooting_date'\r\n                        type='date'\r\n                        name='shooting_date'\r\n                        onChange={this.myChangeHandler} />\r\n                </label><br></br>\r\n                <label>Enter the location:\r\n                    <input\r\n                        id='location'\r\n                        type='text'\r\n                        name='location'\r\n                        placeholder='Enter your location'\r\n                        onChange={this.myChangeHandler} />\r\n                </label><br></br>\r\n                <label>Enter the hashtag:\r\n                    <input\r\n                        id='hashtag'\r\n                        type='text'\r\n                        name='hashtag'\r\n                        placeholder='Enter your hashtag'\r\n                        value={this.state.hashtag}\r\n                        onKeyDown={this.myChangeHandler}\r\n                        onChange={this.myChangeHandler} />\r\n                </label><br></br>\r\n                {displayArray(this.state.hashtags)}\r\n                <div style={{ width: 25 + '%' }}>\r\n                    <ReactFlagsSelect\r\n                        searchable={true}\r\n                        defaultCountry=\"FR\"\r\n                        searchPlaceholder=\"Search for a country\"\r\n                        onSelect={this.onSelectCountry}\r\n                        placeholder=\"Select your actual country\"\r\n                        className=\"flag-select\" />\r\n                </div>\r\n                <input type=\"file\" id=\"picture\" name=\"picture\" onChange={this.myChangeHandler} />\r\n                <input id=\"submit\"\r\n                    type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default PostPostForm;\r\n","import React from 'react';\r\nimport PostPostForm from '../form/postPostForm';\r\ntype state = { picture: any, error: string };\r\nclass PostPost extends React.Component<{}, state>  {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            picture: '',\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PostPostForm {...this.props} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PostPost;","import React from 'react'\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            404 Not Found\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { ShowLoader, ErrorAlert, CloseLoader } from '../alert';\r\nimport { redirection } from '../globalFunctions';\r\nimport PostService from '../services/postService';\r\ntype State = { post: any };\r\ntype Props = { id: string }\r\nclass SinglePost extends React.Component<Props, State> {\r\n\r\n    private _post_service: PostService = new PostService()\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { post: null }\r\n        if (!props.id) {\r\n            ErrorAlert(\"Id Required\").then(() => {\r\n                redirection(this.props, '/trackersFeed');\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        ShowLoader();\r\n        const result = await this._post_service.getPostById(this.props.id);\r\n        if (result.status === 200) {\r\n            ErrorAlert(result.response.data).then(() => {\r\n                redirection(this.props, '/trackersFeed');\r\n            })\r\n        } else {\r\n            CloseLoader();\r\n            redirection(this.props, '/login');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SinglePost;","import React from 'react';\r\nimport GlobeTrotterModel from '../models/globeTrotterModel';\r\nimport GlobeTrotterService from '../services/globeTrotterService';\r\nimport { ShowLoader, ErrorAlert, CloseLoader } from '../alert';\r\nimport { redirection } from '../globalFunctions';\r\ntype State = { globe_trotter: GlobeTrotterModel };\r\ntype Props = { id: string }\r\nclass SingleGlobeTrotter extends React.Component<Props, State>  {\r\n\r\n    private _globe_trotter_provider: GlobeTrotterService = new GlobeTrotterService();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            globe_trotter: new GlobeTrotterModel(null),\r\n        }\r\n        if (!props.id) {\r\n            ErrorAlert(\"Id Required\").then(() => {\r\n                redirection(this.props, '/trackersFeed');\r\n            })\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n\r\n        ShowLoader();\r\n        const result = await this._globe_trotter_provider.getGlobeTrotterById(this.props.id);\r\n        if (result.status === 200) {\r\n            this.setState({ globe_trotter: result.data } as Pick<State, keyof State>);\r\n            CloseLoader();\r\n        } else {\r\n            ErrorAlert(result.response.data).then();\r\n            redirection(this.props, '/login');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                username: {this.state.globe_trotter?.username}<br></br>\r\n                biography: {this.state.globe_trotter?.biography}<br></br>\r\n                last_name: {this.state.globe_trotter?.last_name}<br></br>\r\n                first_name: {this.state.globe_trotter?.first_name}<br></br>\r\n                age : {this.state.globe_trotter?.birth_date}<br></br>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleGlobeTrotter;","import React from 'react';\nimport { redirection, displayArray } from '../globalFunctions';\nimport LocalAuthenticationService from '../services/authentication/localAuthenticationService';\nimport RequiredValidation from '../validator/requiredValidation';\nimport { ShowLoader, CloseLoader, ErrorAlert } from '../alert';\nimport { withRouter } from 'react-router-dom'\nimport { setCookie, getCookie, removeCookie } from '../cookies';\nimport Validation from '../validator/validation';\ntype State = { username: string, password: string };\nclass LoginForm extends React.Component<{}, State> {\n\n    private errors: Map<string, string[]> = new Map();\n    private requireValidation: Validation = new RequiredValidation();\n    private localAuthenticationService: LocalAuthenticationService = new LocalAuthenticationService();\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const authorization = getCookie('authorization')\n        if (authorization !== undefined) {\n            const result = await this.localAuthenticationService.loginByToken(authorization);\n            if (result.status === 200) {\n                redirection(this.props, '/account')\n            } else {\n                removeCookie('authorization')\n            }\n\n        }\n    }\n\n    myChangeHandler = (event: any) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val } as Pick<State, keyof State>);\n        this.errors.set(nam, this.requireValidation.getErrors(val));\n        this.isFormValid();\n    }\n\n\n    isFormValid() {\n        if (\n            this.requireValidation.isValid(this.state.password) &&\n            this.requireValidation.isValid(this.state.username)\n        ) {\n            (document.getElementById(\"submit\") as HTMLButtonElement).disabled = false;\n\n        } else {\n            (document.getElementById(\"submit\") as HTMLButtonElement).disabled = true;\n        }\n\n    }\n\n    async handleSubmit(event: any) {\n        event.preventDefault();\n        ShowLoader();\n        const result = await this.localAuthenticationService.loginByCredentials(this.state.username, this.state.password)\n        if (result.status !== 200) {\n            ErrorAlert(result.response.data).then();\n        } else {\n            setCookie('authorization', result.data)\n            CloseLoader();\n            redirection(this.props, '/account');\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Enter your username\n                    <input\n                        id='username'\n                        type='text'\n                        name='username'\n                        placeholder='Enter your username'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('username'))}\n                </label><br></br>\n                <label>Enter your password:\n                    <input\n                        id='password'\n                        type='password'\n                        name='password'\n                        placeholder='Enter your password'\n                        onChange={this.myChangeHandler} />\n                    {displayArray(this.errors.get('password'))}\n                </label><br></br>\n                <input id=\"submit\"\n                    type=\"submit\" value=\"Submit\" disabled />\n            </form>\n        );\n    }\n}\nexport default withRouter(LoginForm);","import LoginForm from '../form/loginForm'\nimport React from 'react'\n\nclass Login extends React.Component {\n\n    render() {\n\n        return (\n            <div>\n                <LoginForm />\n            </div>\n\n        );\n    }\n}\n\nexport default Login","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Register from './component/public-pages/register';\nimport RecoveryPassword from './component/public-pages/recoveryPassword';\nimport ChangePassword from './component/public-pages/changePassword';\nimport Home from './component/public-pages/home';\nimport Callback from './component/public-pages/callback';\nimport Account from './component/private-pages/account';\nimport TrackersFeed from './component/private-pages/trackersFeed';\nimport { Redirect } from 'react-router-dom'\nimport PostPost from './component/private-pages/postPost';\nimport NotFound from './component/public-pages/notFound';\nimport { getCookie, removeCookie } from './component/cookies';\nimport SinglePost from './component/private-pages/singlePost';\nimport SingleGlobeTrotter from './component/private-pages/singleGlobeTrotter';\n// import TestForm from './component/form/testForm';\nimport LocalAuthenticationService from './component/services/authentication/localAuthenticationService';\nimport Login from './component/public-pages/login';\n\nconst localAuthenticationService: LocalAuthenticationService = new LocalAuthenticationService();\n\nasync function isUserLogged() {\n  const token = getCookie('authorization')\n  if (token === undefined) {\n    return false;\n  }\n  const result = await localAuthenticationService.loginByToken(token);\n  if (result.status === 200) {\n    return true;\n  } else {\n    removeCookie('authorization');\n    return false;\n  }\n\n}\n\nfunction GuardRoute() {\n  return function ({ component: Component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={(props: JSX.IntrinsicAttributes) => (isUserLogged() ? <Component {...props} /> : <Redirect to=\"/login\" />)}\n      />\n    );\n  };\n}\n\n\nclass App extends React.Component<{}, {}> {\n  render() {\n    const PrivateRoute = GuardRoute();\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li><Link to={'/'} className=\"nav-link\"> Home </Link></li>\n              <li><Link to={'/register'} className=\"nav-link\">Register</Link></li>\n              <li><Link to={'/recoveryPassword'} className=\"nav-link\">RecoveryPassword</Link></li>\n              <li><Link to={'/changePassword'} className=\"nav-link\">ChangePassword</Link></li>\n              <li><Link to={'/login'} className=\"nav-link\">Login</Link></li>\n              <li><Link to={'/account'} className=\"nav-link\">Account</Link></li>\n              <li><Link to={'/trackersFeed'} className=\"nav-link\">TrackersFeed</Link></li>\n              <li><Link to={'/postPost'} className=\"nav-link\">Create a Post</Link></li>\n            </ul>\n          </nav>\n          <hr />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route path='/recoveryPassword' component={RecoveryPassword} />\n            <Route path='/changePassword' component={ChangePassword} />\n            <PrivateRoute path='/account' component={Account} />\n            <PrivateRoute path='/globeTrotter' component={SingleGlobeTrotter} />\n            <PrivateRoute path='/trackersFeed' component={TrackersFeed} />\n            <PrivateRoute path='/post' component={SinglePost} />\n            <Route path='/callback' component={Callback} />\n            <Route path='/postPost' component={PostPost} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","var map = {\n\t\"./ad.svg\": 70,\n\t\"./ae.svg\": 71,\n\t\"./af.svg\": 72,\n\t\"./ag.svg\": 73,\n\t\"./ai.svg\": 74,\n\t\"./al.svg\": 75,\n\t\"./am.svg\": 76,\n\t\"./ao.svg\": 77,\n\t\"./ar.svg\": 78,\n\t\"./as.svg\": 79,\n\t\"./at.svg\": 80,\n\t\"./au.svg\": 81,\n\t\"./aw.svg\": 82,\n\t\"./az.svg\": 83,\n\t\"./ba.svg\": 84,\n\t\"./bb.svg\": 85,\n\t\"./bd.svg\": 86,\n\t\"./be.svg\": 87,\n\t\"./bf.svg\": 88,\n\t\"./bg.svg\": 89,\n\t\"./bh.svg\": 90,\n\t\"./bi.svg\": 91,\n\t\"./bj.svg\": 92,\n\t\"./bm.svg\": 93,\n\t\"./bo.svg\": 94,\n\t\"./br.svg\": 95,\n\t\"./bs.svg\": 96,\n\t\"./bt.svg\": 97,\n\t\"./bw.svg\": 98,\n\t\"./by.svg\": 99,\n\t\"./bz.svg\": 100,\n\t\"./ca.svg\": 101,\n\t\"./cd.svg\": 102,\n\t\"./cf.svg\": 103,\n\t\"./cg.svg\": 104,\n\t\"./ch.svg\": 105,\n\t\"./ci.svg\": 106,\n\t\"./ck.svg\": 107,\n\t\"./cl.svg\": 108,\n\t\"./cm.svg\": 109,\n\t\"./cn.svg\": 110,\n\t\"./co.svg\": 111,\n\t\"./cr.svg\": 112,\n\t\"./cu.svg\": 113,\n\t\"./cv.svg\": 114,\n\t\"./cw.svg\": 115,\n\t\"./cy.svg\": 116,\n\t\"./cz.svg\": 117,\n\t\"./de.svg\": 118,\n\t\"./dj.svg\": 119,\n\t\"./dk.svg\": 120,\n\t\"./dm.svg\": 121,\n\t\"./do.svg\": 122,\n\t\"./dz.svg\": 123,\n\t\"./ec.svg\": 124,\n\t\"./ee.svg\": 125,\n\t\"./eg.svg\": 126,\n\t\"./er.svg\": 127,\n\t\"./es.svg\": 128,\n\t\"./et.svg\": 129,\n\t\"./fi.svg\": 130,\n\t\"./fj.svg\": 131,\n\t\"./fk.svg\": 132,\n\t\"./fm.svg\": 133,\n\t\"./fo.svg\": 134,\n\t\"./fr.svg\": 135,\n\t\"./ga.svg\": 136,\n\t\"./gb.svg\": 137,\n\t\"./gd.svg\": 138,\n\t\"./ge.svg\": 139,\n\t\"./gg.svg\": 140,\n\t\"./gh.svg\": 141,\n\t\"./gi.svg\": 142,\n\t\"./gl.svg\": 143,\n\t\"./gm.svg\": 144,\n\t\"./gn.svg\": 145,\n\t\"./gq.svg\": 146,\n\t\"./gr.svg\": 147,\n\t\"./gt.svg\": 148,\n\t\"./gu.svg\": 149,\n\t\"./gw.svg\": 150,\n\t\"./hk.svg\": 151,\n\t\"./hn.svg\": 152,\n\t\"./hr.svg\": 153,\n\t\"./ht.svg\": 154,\n\t\"./hu.svg\": 155,\n\t\"./id.svg\": 156,\n\t\"./ie.svg\": 157,\n\t\"./il.svg\": 158,\n\t\"./im.svg\": 159,\n\t\"./in.svg\": 160,\n\t\"./io.svg\": 161,\n\t\"./iq.svg\": 162,\n\t\"./ir.svg\": 163,\n\t\"./is.svg\": 164,\n\t\"./it.svg\": 165,\n\t\"./je.svg\": 166,\n\t\"./jm.svg\": 167,\n\t\"./jo.svg\": 168,\n\t\"./jp.svg\": 169,\n\t\"./ke.svg\": 170,\n\t\"./kg.svg\": 171,\n\t\"./kh.svg\": 172,\n\t\"./ki.svg\": 173,\n\t\"./km.svg\": 174,\n\t\"./kn.svg\": 175,\n\t\"./kp.svg\": 176,\n\t\"./kr.svg\": 177,\n\t\"./kw.svg\": 178,\n\t\"./ky.svg\": 179,\n\t\"./kz.svg\": 180,\n\t\"./la.svg\": 181,\n\t\"./lb.svg\": 182,\n\t\"./li.svg\": 183,\n\t\"./lk.svg\": 184,\n\t\"./lr.svg\": 185,\n\t\"./ls.svg\": 186,\n\t\"./lt.svg\": 187,\n\t\"./lu.svg\": 188,\n\t\"./lv.svg\": 189,\n\t\"./ly.svg\": 190,\n\t\"./ma.svg\": 191,\n\t\"./mc.svg\": 192,\n\t\"./md.svg\": 193,\n\t\"./me.svg\": 194,\n\t\"./mg.svg\": 195,\n\t\"./mh.svg\": 196,\n\t\"./mk.svg\": 197,\n\t\"./ml.svg\": 198,\n\t\"./mm.svg\": 199,\n\t\"./mn.svg\": 200,\n\t\"./mo.svg\": 201,\n\t\"./mp.svg\": 202,\n\t\"./mq.svg\": 203,\n\t\"./mr.svg\": 204,\n\t\"./ms.svg\": 205,\n\t\"./mt.svg\": 206,\n\t\"./mu.svg\": 207,\n\t\"./mv.svg\": 208,\n\t\"./mw.svg\": 209,\n\t\"./mx.svg\": 210,\n\t\"./my.svg\": 211,\n\t\"./mz.svg\": 212,\n\t\"./na.svg\": 213,\n\t\"./nato.svg\": 214,\n\t\"./ne.svg\": 215,\n\t\"./nf.svg\": 216,\n\t\"./ng.svg\": 217,\n\t\"./ni.svg\": 218,\n\t\"./nl.svg\": 219,\n\t\"./no.svg\": 220,\n\t\"./np.svg\": 221,\n\t\"./nr.svg\": 222,\n\t\"./nu.svg\": 223,\n\t\"./nz.svg\": 224,\n\t\"./om.svg\": 225,\n\t\"./pa.svg\": 226,\n\t\"./pe.svg\": 227,\n\t\"./pf.svg\": 228,\n\t\"./pg.svg\": 229,\n\t\"./ph.svg\": 230,\n\t\"./pk.svg\": 231,\n\t\"./pl.svg\": 232,\n\t\"./pn.svg\": 233,\n\t\"./pr.svg\": 234,\n\t\"./ps.svg\": 235,\n\t\"./pt.svg\": 236,\n\t\"./pw.svg\": 237,\n\t\"./py.svg\": 238,\n\t\"./qa.svg\": 239,\n\t\"./ro.svg\": 240,\n\t\"./rs.svg\": 241,\n\t\"./ru.svg\": 242,\n\t\"./rw.svg\": 243,\n\t\"./sa.svg\": 244,\n\t\"./sb.svg\": 245,\n\t\"./sc.svg\": 246,\n\t\"./sd.svg\": 247,\n\t\"./se.svg\": 248,\n\t\"./sg.svg\": 249,\n\t\"./si.svg\": 250,\n\t\"./sk.svg\": 251,\n\t\"./sl.svg\": 252,\n\t\"./sm.svg\": 253,\n\t\"./sn.svg\": 254,\n\t\"./so.svg\": 255,\n\t\"./sr.svg\": 256,\n\t\"./ss.svg\": 257,\n\t\"./st.svg\": 258,\n\t\"./sv.svg\": 259,\n\t\"./sx.svg\": 260,\n\t\"./sy.svg\": 261,\n\t\"./sz.svg\": 262,\n\t\"./tc.svg\": 263,\n\t\"./td.svg\": 264,\n\t\"./tg.svg\": 265,\n\t\"./th.svg\": 266,\n\t\"./tibet.svg\": 267,\n\t\"./tj.svg\": 268,\n\t\"./tk.svg\": 269,\n\t\"./tm.svg\": 270,\n\t\"./tn.svg\": 271,\n\t\"./to.svg\": 272,\n\t\"./tr.svg\": 273,\n\t\"./tt.svg\": 274,\n\t\"./tv.svg\": 275,\n\t\"./tw.svg\": 276,\n\t\"./tz.svg\": 277,\n\t\"./ua.svg\": 278,\n\t\"./ug.svg\": 279,\n\t\"./us.svg\": 280,\n\t\"./uy.svg\": 281,\n\t\"./uz.svg\": 282,\n\t\"./ve.svg\": 283,\n\t\"./vi.svg\": 284,\n\t\"./vn.svg\": 285,\n\t\"./vu.svg\": 286,\n\t\"./ws.svg\": 287,\n\t\"./ye.svg\": 288,\n\t\"./za.svg\": 289,\n\t\"./zm.svg\": 290,\n\t\"./zw.svg\": 291\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35;"],"sourceRoot":""}